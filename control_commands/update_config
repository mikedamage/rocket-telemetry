#!/opt/homebrew/bin/bash

source ./common.sh

usage() {
  echo "Usage: $0 [-s SSID] [-p PASSWORD] [-S SERVER_IP] [-P SERVER_PORT] [-g GROUND_PRESSURE] [-r SAMPLE_RATE_MS] [-t TELEMETRY_TIMEOUT_MS]"
  exit 1
}

declare -A config_values

while getopts ":s:p:S:P:g:r:t:" opt; do
  case $opt in
    s)
      config_values[ssid]="\"$OPTARG\""
      ;;
    p)
      config_values[password]="\"$OPTARG\""
      ;;
    S)
      config_values[server_ip]="\"$OPTARG\""
      ;;
    P)
      config_values[server_port]="$OPTARG"
      ;;
    g)
      config_values[ground_reference_pressure]="$OPTARG"
      ;;
    r)
      config_values[reading_interval]="$OPTARG"
      ;;
    t)
      config_values[telemetry_timeout]="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      ;;
    :)
      echo "Option -$OPTARG requires an argument"
      usage
      ;;
  esac
done

shift $((OPTIND - 1))

json_payload="{"
for key in "${!config_values[@]}"; do
  value="${config_values[$key]}"
  json_payload+="\"$key\":$value,"
done

json_payload="${json_payload%,}"
json_payload+="}"

echo "updating config with $json_payload"

api_request PUT config "$json_payload" | jq .
